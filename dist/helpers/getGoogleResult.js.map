{"version":3,"sources":["../../src/helpers/getGoogleResult.js"],"names":["keyword","domain","numberOfPages","console","log","randomUserAgents","start","appConstants","pageWaitDurationRangeStart","end","pageWaitDurationRangeEnd","puppeteer","launch","headless","browser","newPage","page","setUserAgent","getRandomSeconds","goto","timeout","focus","type","delay","$","submit","click","waitForNavigation","plainText","pageOneText","isNull","error","errorMessage","result","Array","from","getUrls","index","i","selector","nextPageNavigateButton","waitFor","currentPageText","concat","close","success","Error","scrapeGoogleResult","require","times","module","exports"],"mappings":"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","file":"getGoogleResult.js","sourcesContent":["const puppeteer = require('puppeteer');\nconst getUrls = require('get-urls');\n\nconst times = require('lodash/times');\nconst concat = require('lodash/concat');\nconst isNull = require('lodash/isNull');\n\nconst getRandomSeconds = require('./getRandomSecondsBetweenRange.js');\n\nconst appConstants = require('./appConstants.js');\n\nasync function scrapeGoogleResult(keyword, domain, numberOfPages) {\n  console.log(' started ', keyword, domain);\n  const randomUserAgents = [\n    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2062.124 Safari/537.36',\n    'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36',\n    'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1',\n    'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.0 Safari/537.36',\n    'Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.93 Safari/537.36',\n    'Mozilla/5.0 (X11; OpenBSD i386) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36',\n    'Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36',\n    'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36',\n    'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36',\n    'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36',\n    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36',\n    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36',\n  ];\n  const {\n    pageWaitDurationRangeStart: start,\n    pageWaitDurationRangeEnd: end,\n  } = appConstants;\n  try {\n    const browser = await puppeteer.launch({\n      headless: true,\n    });\n    const page = await browser.newPage();\n    page.setUserAgent(randomUserAgents[getRandomSeconds(0, 8)]);\n    await page.goto('https://www.google.com/ncr', {\n      timeout: 60000,\n    });\n\n    await page.goto(domain);\n\n    page.focus('input[title=\"Search\"]');\n\n    await page.type(keyword, { delay: getRandomSeconds(100, 500) });\n\n    const submit = await page.$('input[value=\"Google Search\"]');\n    await submit.click();\n\n    await page.waitForNavigation();\n\n    // const result\n    const pageOneText = await page.plainText();\n    if (isNull(pageOneText)) {\n      return {\n        error: true,\n        errorMessage: 'Failed to fetch page 1'\n      };\n    }\n    let result = Array.from(getUrls(pageOneText));\n\n    let index = 1;\n    for (var i = index + 1; i <= numberOfPages ; i++) {\n      const selector = `a[aria-label=\"Page ${i}\"]`;\n      const nextPageNavigateButton = await page.$(selector);\n\n      await page.waitFor(getRandomSeconds(start, end));\n      await nextPageNavigateButton.click();\n      await page.waitForNavigation();\n\n      const currentPageText = await page.plainText();\n      if (isNull(currentPageText)) {\n        return {\n          error: true,\n          errorMessage: `Failed to fetch page ${i}`\n        };\n      }\n      result = concat(result, Array.from(getUrls(currentPageText)));\n    }\n    await page.close();\n    browser.close();\n    return {\n      success: true,\n      result,\n    };\n  } catch (e) {\n    throw new Error(`Error occured ${e}`);\n  }\n}\n\nmodule.exports = {\n  scrapeGoogleResult: scrapeGoogleResult,\n};\n"]}