{"version":3,"sources":["../../src/helpers/index.js"],"names":["keyword","domain","numberOfPages","console","log","randomUserAgents","start","appConstants","pageWaitDurationRangeStart","end","pageWaitDurationRangeEnd","puppeteer","launch","headless","browser","newPage","page","setUserAgent","getRandomSeconds","goto","focus","type","delay","$","submit","click","waitForNavigation","plainText","pageOneText","isNull","error","errorMessage","result","Array","from","getUrls","index","i","selector","nextPageNavigateButton","waitFor","currentPageText","concat","close","success","scrapeGoogleResult","require","times","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["const puppeteer = require('puppeteer');\nconst getUrls = require('get-urls');\n\nconst times = require('lodash/times');\nconst concat = require('lodash/concat');\nconst isNull = require('lodash/isNull');\n\nconst getRandomSeconds = require('./getRandomSecondsBetweenRange.js');\n\nconst appConstants = require('./appConstants.js');\n\nasync function scrapeGoogleResult(keyword, domain, numberOfPages) {\n  console.log(' started ', keyword, domain);\n  const randomUserAgents = [\n    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2062.124 Safari/537.36',\n    'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36',\n    'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1',\n    'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.0 Safari/537.36',\n    'Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.93 Safari/537.36',\n    'Mozilla/5.0 (X11; OpenBSD i386) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36',\n    'Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36',\n    'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36',\n    'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36',\n    'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36',\n    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36',\n    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36',\n  ];\n  const {\n    pageWaitDurationRangeStart: start,\n    pageWaitDurationRangeEnd: end,\n  } = appConstants;\n\n  const browser = await puppeteer.launch({\n    headless: true,\n  });\n  const page = await browser.newPage();\n  page.setUserAgent(randomUserAgents[getRandomSeconds(0, 8)]);\n  await page.goto('https://www.google.com/ncr');\n  await page.goto(domain);\n\n  page.focus('input[title=\"Search\"]');\n\n  await page.type(keyword, { delay: getRandomSeconds(100, 200) });\n\n  const submit = await page.$('input[value=\"Google Search\"]');\n  await submit.click();\n\n  await page.waitForNavigation();\n\n  // const result\n  const pageOneText = await page.plainText();\n  if (isNull(pageOneText)) {\n    return {\n      error: true,\n      errorMessage: 'Failed to fetch page 1'\n    };\n  }\n  let result = Array.from(getUrls(pageOneText));\n\n  let index = 1;\n  for (var i = index + 1; i <= numberOfPages ; i++) {\n    const selector = `a[aria-label=\"Page ${i}\"]`;\n    const nextPageNavigateButton = await page.$(selector);\n\n    await page.waitFor(getRandomSeconds(start, end));\n    await nextPageNavigateButton.click();\n    await page.waitForNavigation();\n\n    const currentPageText = await page.plainText();\n    if (isNull(currentPageText)) {\n      return {\n        error: true,\n        errorMessage: `Failed to fetch page ${i}`\n      };\n    }\n    result = concat(result, Array.from(getUrls(currentPageText)));\n  }\n\n  browser.close();\n  return {\n    success: true,\n    result,\n  };\n}\n\nmodule.exports = {\n  scrapeGoogleResult: scrapeGoogleResult,\n};\n"]}