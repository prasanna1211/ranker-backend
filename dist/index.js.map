{"version":3,"sources":["../src/index.js"],"names":["app","server","createServer","use","exposedHeaders","corsHeaders","json","limit","bodyLimit","taskHeader","Array","taskList","config","db","cronStringStarting","cronStringEnding","schedule","scrapAndWriteToDb","i","length","j","isEmpty","destroy","listen","process","env","PORT","port","console","log","address"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,MAAM,wBAAV;AACAA,IAAIC,MAAJ,GAAa,eAAKC,YAAL,CAAkBF,GAAlB,CAAb;;AAEA;AACAA,IAAIG,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEA;AACAH,IAAIG,GAAJ,CAAQ,oBAAK;AACZC,iBAAgB,iBAAOC;AADX,CAAL,CAAR;;AAIAL,IAAIG,GAAJ,CAAQ,qBAAWG,IAAX,CAAgB;AACvBC,QAAQ,iBAAOC;AADQ,CAAhB,CAAR;;AAIA,IAAMC,aAAa,IAAIC,KAAJ,CAAU,EAAV,CAAnB;;AAEA,IAAMC,WAAW,mBAAIF,UAAJ,EAAgB;AAAA,QAAQ,IAAIC,KAAJ,CAAU,EAAV,CAAR;AAAA,CAAhB,CAAjB;;AAEA;AACA,kBAAc,cAAM;;AAEnB;AACAV,KAAIG,GAAJ,CAAQ,0BAAW,EAAES,wBAAF,EAAUC,MAAV,EAAX,CAAR;;AAEA;AACAb,KAAIG,GAAJ,CAAQ,MAAR,EAAgB,mBAAI,EAAES,wBAAF,EAAUC,MAAV,EAAcF,kBAAd,EAAJ,CAAhB;AACA,KAAMG,qBAAqB,eAA3B;AACA,KAAMC,mBAAmB,cAAzB;;AAEA,oBAAKC,QAAL,CAAcF,kBAAd,EAAkC,YAAM;AACvC,kBAAWG,iBAAX,CAA6BJ,EAA7B,EAAiCF,QAAjC;AACA,EAFD;AAGA,oBAAKK,QAAL,CAAcD,gBAAd,EAAgC,YAAM;AACnC,OAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAIP,SAASQ,MAA7B,EAAqCD,GAArC,EAA0C;AACxC,QAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAIT,SAASO,CAAT,EAAYC,MAAhC,EAAwCC,GAAxC,EAA6C;AAC3C,QAAI,CAACC,QAAQV,SAASO,CAAT,EAAYE,CAAZ,CAAR,CAAL,EAA8B;AAC5BT,cAASO,CAAT,EAAYE,CAAZ,EAAeE,OAAf;AACD;AACF;AACF;AACH,EARD;AASAtB,KAAIC,MAAJ,CAAWsB,MAAX,CAAkBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,iBAAOC,IAA7C,EAAmD,YAAM;AACxDC,UAAQC,GAAR,sBAA+B7B,IAAIC,MAAJ,CAAW6B,OAAX,GAAqBH,IAApD;AACA,EAFD;AAGA,CAzBD;;kBA2Be3B,G","file":"index.js","sourcesContent":["import http from 'http';\nimport express from 'express';\nimport cors from 'cors';\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\nimport initializeDb from './db';\nimport middleware from './middleware';\nimport api from './api';\nimport config from './config.json';\nimport cron from 'node-cron';\nimport map from 'lodash/map';\nimport syncModule from './api/sync/index.js';\n\nlet app = express();\napp.server = http.createServer(app);\n\n// logger\napp.use(morgan('dev'));\n\n// 3rd party middleware\napp.use(cors({\n\texposedHeaders: config.corsHeaders\n}));\n\napp.use(bodyParser.json({\n\tlimit : config.bodyLimit\n}));\n\nconst taskHeader = new Array(30);\n\nconst taskList = map(taskHeader, task => new Array(20));\n\n// connect to db\ninitializeDb( db => {\n\n\t// internal middleware\n\tapp.use(middleware({ config, db }));\n\n\t// api router\n\tapp.use('/api', api({ config, db, taskList }));\n\tconst cronStringStarting = '0 12 11 * * *';\n\tconst cronStringEnding = '0 0 23 * * *';\n\n\tcron.schedule(cronStringStarting, () => {\n\t\tsyncModule.scrapAndWriteToDb(db, taskList);\n\t});\n\tcron.schedule(cronStringEnding, () => {\n    for (var i = 0; i < taskList.length; i++) {\n      for (var j = 0; j < taskList[i].length; j++) {\n        if (!isEmpty(taskList[i][j])) {\n          taskList[i][j].destroy();\n        }\n      }\n    }\n\t});\n\tapp.server.listen(process.env.PORT || config.port, () => {\n\t\tconsole.log(`Started on port ${app.server.address().port}`);\n\t});\n});\n\nexport default app;\n"]}